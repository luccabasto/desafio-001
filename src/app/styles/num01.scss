/*Comentando o código para absorver melhor.*/

.frame{
    background: #026E81;
    position: absolute;
    top:50%; // Centralizando o elemento verticalmente.
    left: 50%; // Centralizando o elemento horizontalmente.
    width: 400px;
    height: 400px;
    margin-top: -200px; // Movendo para cima metade da altura para centralizar.
    margin-left: -200px; // Movendo para a esquerda metade da largura para centralizar.
    border-radius: 4px;

    box-shadow: 1px 2px 10px 0px rgba(0,0,0, 0.3); // Adicionando sombras
    overflow: hidden; // Contéudo que vazer/exceder será escondido.
    color: #fff;
    /** font-family: aqui;*/
    -webkit-font-smoothing: atialiased; // Suavização da fonte para navegadores WebKit.
    -moz-osx-font-smoothing: grayscale; // Suavização da fonte para navegadores FIrefox.
   
}
.wave {
    position: absolute;
    border: 1px solid #888;
}
.frame:hover .wave{ // Ao entrar em hover no elemento-pai (pai), o elemento-filho (wave) vai se comportar...
    animation-play-state:paused ;
};

@for $i from 1 through 20{
    .wave-#{$i} {
        $color: 70 + ($i *8); // Calcula a cor baseada no índice.
        $size: (210 - (10 * $i)); // Calcula o tamanho baseado no índice.
        width: $size + px; // Define a largura
        height: $size + px; // Define a altura
        top: ((400 - $size) / 2) + px; // Centraliza verticalmente.
        left: ((400 - $size) / 2) + px; // Centraliza horizontalmente.
        z-index: $i; // Define a camada de profundidade.
        border-color: rgb($color, $color, $color); // Define a cor da borda com a variável.
        animation: rotate 5s ease-in-out ($i / 30) + s alternate infinite; // Definindo a animação de rotação com a variável.
    };
};

@keyframes rotate{
    from{
        transform: rotate(0); //Início da rotação.
    }
    to {
        transform: rotate(360deg); //Fim da rotação 360graus. 
    }
}